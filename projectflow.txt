1. Create git repo and clone it in local.
2. Create mycode.py and add code to it. (It will save a CSV file to a new "data" folder)
3. Do a git add-commit-push before initializing DVC.
4. Now do `dvc init` (creates `.dvcignore`, `.dvc`)
5. Now do `mkdir S3` (creates a new S3 directory)
6. Now we do `dvc remote add -d myremote S3`
7. Next `dvc add data/`
   - Now it will ask to do:
     git rm -r --cached 'data'
     git commit -m "stop tracking data"
     Because initially we were tracking `data/` folder from git, so now we remove it for DVC to handle.
8. Again we do `dvc add data/` (creates `data.dvc`) then
   git add .gitignore data.dvc
9. Now `dvc commit` and then `dvc push`
10. Do a git add-commit-push to mark this stage as first version of data.
11. Now make changes to `mycode.py` to append a new row in data, check changes via `dvc status`.
12. Again – `dvc commit` and then `dvc push`.
13. Then git add-commit-push (we’re saving V2 of our data at this point).
14. Check `dvc`/`git status`, everything should be up to date.
15. Now repeat steps 10–12 for V3 of data.

python -m dvc remote add -d myremote S3

----------------------------------------
Extension – DVC has to be installed
`dvc init` (creates `.dvcignore`, `.dvc`)
<Locate DVC to global if any error thrown>

Example commands:
mkdir %temp%/dvcstore    # or mkdir temp
dvc remote add -d myremote %temp%/dvcstore
# or
dvc remote add -d myremote temp

dvc add data/   # creates data.dvc
git add .gitignore data.dvc
dvc commit
dvc push
dvc status
git status
dvc push
git log --oneline
git checkout <hash>   # or git checkout master
git pull